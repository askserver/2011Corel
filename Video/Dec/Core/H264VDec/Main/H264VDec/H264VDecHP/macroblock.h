
/*!
************************************************************************
* \file macroblock.h
*
* \brief
*    Arrays for macroblock encoding
*
* \author
*    Inge Lille-Langoy               <inge.lille-langoy@telenor.com>
*    Copyright (C) 1999 Telenor Satellite Services, Norway
************************************************************************
*/

#ifndef _MACROBLOCK_H_
#define _MACROBLOCK_H_


//! single scan pattern
const byte SNGL_SCAN_2Dx16[2][16] =
{
	{
		0*16,  4*16,  1*16,  8*16,
			12*16,  5*16,  9*16, 13*16,
			2*16,  6*16, 10*16, 14*16,
			3*16,  7*16, 11*16, 15*16
	},


	{
		0*16,  1*16,  4*16,  8*16,
			5*16,  2*16,  3*16,  6*16,
			9*16, 12*16, 13*16, 10*16,
			7*16, 11*16, 14*16, 15*16
		}
};

#ifdef _PRE_TRANSPOSE_
const byte SNGL_SCAN_2D[2][16] =
{
	{
		0,  1,  4,  2,
			3,  5,  6,  7,
			8,  9, 10, 11,
			12, 13, 14, 15
	},


	{
		0,  4,  1,  2,
			5,  8, 12,  9,
			6,  3,  7, 10,
			13, 14, 11, 15
		}
};
const byte SNGL_SCAN_2D_Intel[2][16] =
{
	{
		0,  4,  1,  8,
		12,  5,  9, 13,
		2,  6, 10, 14,
		3,  7, 11, 15
	},


	{
		0,  1,  4,  8,
		5,  2,  3,  6,
		9, 12, 13, 10,
		7, 11, 14, 15
	}
};
#else
const byte SNGL_SCAN_2D[2][16] =
{
	{
		0,  4,  1,  8,
			12,  5,  9, 13,
			2,  6, 10, 14,
			3,  7, 11, 15
	},


	{
		0,  1,  4,  8,
			5,  2,  3,  6,
			9, 12, 13, 10,
			7, 11, 14, 15
		}
};
#endif

//! used to control block sizes : Not used/16x16/16x8/8x16/8x8/8x4/4x8/4x4
//KevinChien
//const int BLOCK_STEP[8][2]=
const short BLOCK_STEP[8][2]=
//
{
	{0,0},{4,4},{4,2},{2,4},{2,2},{2,1},{1,2},{1,1}
};

//! Dequantization coefficients
int dequant_coef[6][16] = {
	{10, 13, 10, 13,   13, 16, 13, 16,  10, 13, 10, 13,   13, 16, 13, 16},
	{11, 14, 11, 14,   14, 18, 14, 18,  11, 14, 11, 14,   14, 18, 14, 18},
	{13, 16, 13, 16,   16, 20, 16, 20,  13, 16, 13, 16,   16, 20, 16, 20},
	{14, 18, 14, 18,   18, 23, 18, 23,  14, 18, 14, 18,   18, 23, 18, 23},
	{16, 20, 16, 20,   20, 25, 20, 25,  16, 20, 16, 20,   20, 25, 20, 25},
	{18, 23, 18, 23,   23, 29, 23, 29,  18, 23, 18, 23,   23, 29, 23, 29}
};

byte QP_SCALE_CR[52]=
{
	0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,
	12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,
	28,29,29,30,31,32,32,33,34,34,35,35,36,36,37,37,
	37,38,38,38,39,39,39,39

};

const byte SNGL_SCAN8x8[2][64][2] = {  
	{{0,0}, {0,1}, {0,2}, {1,0}, {1,1}, {0,3}, {0,4}, {1,2}, {2,0}, {1,3}, {0,5}, {0,6}, {0,7}, {1,4}, {2,1}, {3,0}, 
	{2,2}, {1,5}, {1,6}, {1,7}, {2,3}, {3,1}, {4,0}, {3,2}, {2,4}, {2,5}, {2,6}, {2,7}, {3,3}, {4,1}, {5,0}, {4,2}, 
	{3,4}, {3,5}, {3,6}, {3,7}, {4,3}, {5,1}, {6,0}, {5,2}, {4,4}, {4,5}, {4,6}, {4,7}, {5,3}, {6,1}, {6,2}, {5,4}, 
	{5,5}, {5,6}, {5,7}, {6,3}, {7,0}, {7,1}, {6,4}, {6,5}, {6,6}, {6,7}, {7,2}, {7,3}, {7,4}, {7,5}, {7,6}, {7,7}},

	{{0,0}, {1,0}, {0,1}, {0,2}, {1,1}, {2,0}, {3,0}, {2,1}, {1,2}, {0,3}, {0,4}, {1,3}, {2,2}, {3,1}, {4,0}, {5,0},
	{4,1}, {3,2}, {2,3}, {1,4}, {0,5}, {0,6}, {1,5}, {2,4}, {3,3}, {4,2}, {5,1}, {6,0}, {7,0}, {6,1}, {5,2}, {4,3},
	{3,4}, {2,5}, {1,6}, {0,7}, {1,7}, {2,6}, {3,5}, {4,4}, {5,3}, {6,2}, {7,1}, {7,2}, {6,3}, {5,4}, {4,5}, {3,6},
	{2,7}, {3,7}, {4,6}, {5,5}, {6,4}, {7,3}, {7,4}, {6,5}, {5,6}, {4,7}, {5,7}, {6,6}, {7,5}, {7,6}, {6,7}, {7,7}}
};


#ifdef _PRE_TRANSPOSE_
const byte SNGL_SCAN8x8_2D[2][64] = {  
	{0*8+0, 0*8+1, 0*8+2, 1*8+0, 1*8+1, 0*8+3, 0*8+4, 1*8+2, 2*8+0, 1*8+3, 0*8+5, 0*8+6, 0*8+7, 1*8+4, 2*8+1, 3*8+0, 
	2*8+2, 1*8+5, 1*8+6, 1*8+7, 2*8+3, 3*8+1, 4*8+0, 3*8+2, 2*8+4, 2*8+5, 2*8+6, 2*8+7, 3*8+3, 4*8+1, 5*8+0, 4*8+2, 
	3*8+4, 3*8+5, 3*8+6, 3*8+7, 4*8+3, 5*8+1, 6*8+0, 5*8+2, 4*8+4, 4*8+5, 4*8+6, 4*8+7, 5*8+3, 6*8+1, 6*8+2, 5*8+4, 
	5*8+5, 5*8+6, 5*8+7, 6*8+3, 7*8+0, 7*8+1, 6*8+4, 6*8+5, 6*8+6, 6*8+7, 7*8+2, 7*8+3, 7*8+4, 7*8+5, 7*8+6, 7*8+7},

	{0*8+0, 1*8+0, 0*8+1, 0*8+2, 1*8+1, 2*8+0, 3*8+0, 2*8+1, 1*8+2, 0*8+3, 0*8+4, 1*8+3, 2*8+2, 3*8+1, 4*8+0, 5*8+0,
	4*8+1, 3*8+2, 2*8+3, 1*8+4, 0*8+5, 0*8+6, 1*8+5, 2*8+4, 3*8+3, 4*8+2, 5*8+1, 6*8+0, 7*8+0, 6*8+1, 5*8+2, 4*8+3,
	3*8+4, 2*8+5, 1*8+6, 0*8+7, 1*8+7, 2*8+6, 3*8+5, 4*8+4, 5*8+3, 6*8+2, 7*8+1, 7*8+2, 6*8+3, 5*8+4, 4*8+5, 3*8+6,
	2*8+7, 3*8+7, 4*8+6, 5*8+5, 6*8+4, 7*8+3, 7*8+4, 6*8+5, 5*8+6, 4*8+7, 5*8+7, 6*8+6, 7*8+5, 7*8+6, 6*8+7, 7*8+7}
};
const byte SNGL_SCAN8x8_2D_Intel[2][64] = {  
	{0+0*8, 0+1*8, 0+2*8, 1+0*8, 1+1*8, 0+3*8, 0+4*8, 1+2*8, 2+0*8, 1+3*8, 0+5*8, 0+6*8, 0+7*8, 1+4*8, 2+1*8, 3+0*8, 
	2+2*8, 1+5*8, 1+6*8, 1+7*8, 2+3*8, 3+1*8, 4+0*8, 3+2*8, 2+4*8, 2+5*8, 2+6*8, 2+7*8, 3+3*8, 4+1*8, 5+0*8, 4+2*8, 
	3+4*8, 3+5*8, 3+6*8, 3+7*8, 4+3*8, 5+1*8, 6+0*8, 5+2*8, 4+4*8, 4+5*8, 4+6*8, 4+7*8, 5+3*8, 6+1*8, 6+2*8, 5+4*8, 
	5+5*8, 5+6*8, 5+7*8, 6+3*8, 7+0*8, 7+1*8, 6+4*8, 6+5*8, 6+6*8, 6+7*8, 7+2*8, 7+3*8, 7+4*8, 7+5*8, 7+6*8, 7+7*8},

	{0+0*8, 1+0*8, 0+1*8, 0+2*8, 1+1*8, 2+0*8, 3+0*8, 2+1*8, 1+2*8, 0+3*8, 0+4*8, 1+3*8, 2+2*8, 3+1*8, 4+0*8, 5+0*8,
	4+1*8, 3+2*8, 2+3*8, 1+4*8, 0+5*8, 0+6*8, 1+5*8, 2+4*8, 3+3*8, 4+2*8, 5+1*8, 6+0*8, 7+0*8, 6+1*8, 5+2*8, 4+3*8,
	3+4*8, 2+5*8, 1+6*8, 0+7*8, 1+7*8, 2+6*8, 3+5*8, 4+4*8, 5+3*8, 6+2*8, 7+1*8, 7+2*8, 6+3*8, 5+4*8, 4+5*8, 3+6*8,
	2+7*8, 3+7*8, 4+6*8, 5+5*8, 6+4*8, 7+3*8, 7+4*8, 6+5*8, 5+6*8, 4+7*8, 5+7*8, 6+6*8, 7+5*8, 7+6*8, 6+7*8, 7+7*8}
};
#else
const byte SNGL_SCAN8x8_2D[2][64] = {  
	{0+0*8, 0+1*8, 0+2*8, 1+0*8, 1+1*8, 0+3*8, 0+4*8, 1+2*8, 2+0*8, 1+3*8, 0+5*8, 0+6*8, 0+7*8, 1+4*8, 2+1*8, 3+0*8, 
	2+2*8, 1+5*8, 1+6*8, 1+7*8, 2+3*8, 3+1*8, 4+0*8, 3+2*8, 2+4*8, 2+5*8, 2+6*8, 2+7*8, 3+3*8, 4+1*8, 5+0*8, 4+2*8, 
	3+4*8, 3+5*8, 3+6*8, 3+7*8, 4+3*8, 5+1*8, 6+0*8, 5+2*8, 4+4*8, 4+5*8, 4+6*8, 4+7*8, 5+3*8, 6+1*8, 6+2*8, 5+4*8, 
	5+5*8, 5+6*8, 5+7*8, 6+3*8, 7+0*8, 7+1*8, 6+4*8, 6+5*8, 6+6*8, 6+7*8, 7+2*8, 7+3*8, 7+4*8, 7+5*8, 7+6*8, 7+7*8},

	{0+0*8, 1+0*8, 0+1*8, 0+2*8, 1+1*8, 2+0*8, 3+0*8, 2+1*8, 1+2*8, 0+3*8, 0+4*8, 1+3*8, 2+2*8, 3+1*8, 4+0*8, 5+0*8,
	4+1*8, 3+2*8, 2+3*8, 1+4*8, 0+5*8, 0+6*8, 1+5*8, 2+4*8, 3+3*8, 4+2*8, 5+1*8, 6+0*8, 7+0*8, 6+1*8, 5+2*8, 4+3*8,
	3+4*8, 2+5*8, 1+6*8, 0+7*8, 1+7*8, 2+6*8, 3+5*8, 4+4*8, 5+3*8, 6+2*8, 7+1*8, 7+2*8, 6+3*8, 5+4*8, 4+5*8, 3+6*8,
	2+7*8, 3+7*8, 4+6*8, 5+5*8, 6+4*8, 7+3*8, 7+4*8, 6+5*8, 5+6*8, 4+7*8, 5+7*8, 6+6*8, 7+5*8, 7+6*8, 6+7*8, 7+7*8}
};
#endif

static const int dequant_coef8[6][8][8] = 
{
	{
		{20,  19, 25, 19, 20, 19, 25, 19},
		{19,  18, 24, 18, 19, 18, 24, 18},
		{25,  24, 32, 24, 25, 24, 32, 24},
		{19,  18, 24, 18, 19, 18, 24, 18},
		{20,  19, 25, 19, 20, 19, 25, 19},
		{19,  18, 24, 18, 19, 18, 24, 18},
		{25,  24, 32, 24, 25, 24, 32, 24},
		{19,  18, 24, 18, 19, 18, 24, 18}
	},
	{
		{22,  21, 28, 21, 22, 21, 28, 21},
		{21,  19, 26, 19, 21, 19, 26, 19},
		{28,  26, 35, 26, 28, 26, 35, 26},
		{21,  19, 26, 19, 21, 19, 26, 19},
		{22,  21, 28, 21, 22, 21, 28, 21},
		{21,  19, 26, 19, 21, 19, 26, 19},
		{28,  26, 35, 26, 28, 26, 35, 26},
		{21,  19, 26, 19, 21, 19, 26, 19}
	},
	{
		{26,  24, 33, 24, 26, 24, 33, 24},
		{24,  23, 31, 23, 24, 23, 31, 23},
		{33,  31, 42, 31, 33, 31, 42, 31},
		{24,  23, 31, 23, 24, 23, 31, 23},
		{26,  24, 33, 24, 26, 24, 33, 24},
		{24,  23, 31, 23, 24, 23, 31, 23},
		{33,  31, 42, 31, 33, 31, 42, 31},
		{24,  23, 31, 23, 24, 23, 31, 23}
	},
	{
		{28,  26, 35, 26, 28, 26, 35, 26},
		{26,  25, 33, 25, 26, 25, 33, 25},
		{35,  33, 45, 33, 35, 33, 45, 33},
		{26,  25, 33, 25, 26, 25, 33, 25},
		{28,  26, 35, 26, 28, 26, 35, 26},
		{26,  25, 33, 25, 26, 25, 33, 25},
		{35,  33, 45, 33, 35, 33, 45, 33},
		{26,  25, 33, 25, 26, 25, 33, 25}
	},
	{
		{32,  30, 40, 30, 32, 30, 40, 30},
		{30,  28, 38, 28, 30, 28, 38, 28},
		{40,  38, 51, 38, 40, 38, 51, 38},
		{30,  28, 38, 28, 30, 28, 38, 28},
		{32,  30, 40, 30, 32, 30, 40, 30},
		{30,  28, 38, 28, 30, 28, 38, 28},
		{40,  38, 51, 38, 40, 38, 51, 38},
		{30,  28, 38, 28, 30, 28, 38, 28}
	},
	{
		{36,  34, 46, 34, 36, 34, 46, 34},
		{34,  32, 43, 32, 34, 32, 43, 32},
		{46,  43, 58, 43, 46, 43, 58, 43},
		{34,  32, 43, 32, 34, 32, 43, 32},
		{36,  34, 46, 34, 36, 34, 46, 34},
		{34,  32, 43, 32, 34, 32, 43, 32},
		{46,  43, 58, 43, 46, 43, 58, 43},
		{34,  32, 43, 32, 34, 32, 43, 32}
	}

};

#endif

