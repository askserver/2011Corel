//////////////////////////////////////////////////////////////////
//	Confidential material.  Copyright 2005 Intervideo, Inc.
//	All Rights Reserved.
//	File:	aes_MMXoptimized.c
#if defined(__linux__)
#include <windows.h>
#endif

typedef unsigned char BYTE;
typedef unsigned long DWORD;


namespace NAESMMX
{

	BYTE g_keyschedule[176] =
	{
		0xC2, 0xAF, 0x72, 0xBB, 0x29, 0xF4, 0x4B, 0xE1,
		0xBD, 0xAD, 0x3C, 0x45, 0xC3, 0x4, 0x4E, 0x75,
		0x31, 0x80, 0xEF, 0x95, 0x18, 0x74, 0xA4, 0x74,
		0xA5, 0xD9, 0x98, 0x31, 0x66, 0xDD, 0xD6, 0x44,
		0xF2, 0x76, 0xF4, 0xA6, 0xEA, 0x2, 0x50, 0xD2,
		0x4F, 0xDB, 0xC8, 0xE3, 0x29, 0x6, 0x1E, 0xA7,
		0x99, 0x4, 0xA8, 0x3, 0x73, 0x6, 0xF8, 0xD1,
		0x3C, 0xDD, 0x30, 0x32, 0x15, 0xDB, 0x2E, 0x95,
		0x28, 0x35, 0x82, 0x5A, 0x5B, 0x33, 0x7A, 0x8B,
		0x67, 0xEE, 0x4A, 0xB9, 0x72, 0x35, 0x64, 0x2C,
		0xAE, 0x76, 0xF3, 0x1A, 0xF5, 0x45, 0x89, 0x91,
		0x92, 0xAB, 0xC3, 0x28, 0xE0, 0x9E, 0xA7, 0x4,
		0x85, 0x2A, 0x1, 0xFB, 0x70, 0x6F, 0x88, 0x6A,
		0xE2, 0xC4, 0x4B, 0x42, 0x2, 0x5A, 0xEC, 0x46,
		0x7B, 0xE4, 0x5B, 0x8C, 0xB, 0x8B, 0xD3, 0xE6,
		0xE9, 0x4F, 0x98, 0xA4, 0xEB, 0x15, 0x74, 0xE2,
		0xA2, 0x76, 0xC3, 0x65, 0xA9, 0xFD, 0x10, 0x83,
		0x40, 0xB2, 0x88, 0x27, 0xAB, 0xA7, 0xFC, 0xC5,
		0xE5, 0xC6, 0x65, 0x7, 0x4C, 0x3B, 0x75, 0x84,
		0xC, 0x89, 0xFD, 0xA3, 0xA7, 0x2E, 0x1, 0x66,
		0x1, 0xE8, 0xB1, 0x80, 0x4D, 0xD3, 0xC4, 0x4,
		0x41, 0x5A, 0x39, 0xA7, 0xE6, 0x74, 0x38, 0xC1,
	};


	BYTE g_inv_keyschedule[176] =
	{
		0x9E, 0x9B, 0x73, 0x8B, 0x75, 0xC0, 0x4A, 0xD1,
		0xE1, 0x99, 0x3D, 0x75, 0x9F, 0x30, 0x4F, 0x45,
		0xD4, 0xC3, 0x87, 0x5B, 0x2D, 0xE4, 0xF2, 0x87,
		0x8E, 0xF1, 0x2, 0xA8, 0x87, 0xE3, 0x65, 0x28,
		0xC5, 0x38, 0x74, 0x5F, 0xE8, 0xDC, 0x86, 0xD8,
		0x66, 0x2D, 0x84, 0x70, 0xE1, 0xCE, 0xE1, 0x58,
		0xE1, 0xC6, 0xBC, 0xAD, 0x9, 0x1A, 0x3A, 0x75,
		0x6F, 0x37, 0xBE, 0x5, 0x8E, 0xF9, 0x5F, 0x5D,
		0x3B, 0x50, 0x0, 0xAE, 0x32, 0x4A, 0x3A, 0xDB,
		0x5D, 0x7D, 0x84, 0xDE, 0xD3, 0x84, 0xDB, 0x83,
		0xC8, 0x6E, 0xF7, 0x60, 0xFA, 0x24, 0xCD, 0xBB,
		0xA7, 0x59, 0x49, 0x65, 0x74, 0xDD, 0x92, 0xE6,
		0x2D, 0xDE, 0x3, 0xA5, 0xD7, 0xFA, 0xCE, 0x1E,
		0x70, 0xA3, 0x87, 0x7B, 0x4, 0x7E, 0x15, 0x9D,
		0xE0, 0x4, 0x50, 0xFC, 0x37, 0xFE, 0x9E, 0xE2,
		0x47, 0x5D, 0x19, 0x99, 0x43, 0x23, 0xC, 0x4,
		0x41, 0x84, 0xC4, 0x73, 0x76, 0x7A, 0x5A, 0x91,
		0x31, 0x27, 0x43, 0x8, 0x72, 0x4, 0x4F, 0xC,
		0xEA, 0xCD, 0xE8, 0x8E, 0x9C, 0xB7, 0xB2, 0x1F,
		0xAD, 0x90, 0xF1, 0x17, 0xDF, 0x94, 0xBE, 0x1B,
		0xE2, 0xBA, 0x56, 0x5B, 0xAE, 0x81, 0x23, 0xDF,
		0xA2, 0x8, 0xDE, 0x7C, 0x5, 0x26, 0xDF, 0x1A,
	};



	static const DWORD S_boxes[256*4] = 
	{
		0x7E843125, 0x5F9B2E1B, 0x4290250D, 0x569C2915, 0xD615A01C, 0x668C3935, 0x6A883D3D, 0x8F229772, 
		0x8BD76283, 0xD8E653E1, 0x7280352D, 0xA6CC79B5, 0xC219AC04, 0xB9308556, 0x3D4CF9AE, 0x4191240F, 
		0x9E2D986C, 0x4665D0FC, 0x9B2E9B6A, 0x5C9A2F19, 0xCE1DA80C, 0x30BE0B51, 0x12A0156D, 0xD017A218, 
		0x374AFFA2, 0xBC338650, 0x2645F0BC, 0x3148FDA6, 0x647BCEC0, 0x2C43F6B0, 0x4D952007, 0x80279278, 
		0x1950E596, 0xC71AAF02, 0x7574C1DE, 0xB1C174AF, 0x81D1648F, 0x9AD86D9D, 0xD910A516, 0x942B9E60, 
		0x87D3668B, 0x2F42F7B2, 0xEF02B732, 0xD316A31A, 0x48962301, 0xA83F8A48, 0x88D66381, 0xE4F247C9, 
		0xD7E356EB, 0x89209576, 0xBEC471A5, 0x8524917E, 0xF3FF4AD3, 0x7A71C4D4, 0xD4E257E9, 0x6E7DC8CC, 
		0xD2E055ED, 0xEDF540C7, 0x4067D2F8, 0xE605B03C, 0xFD0CB92E, 0xB2C075AD, 0x1655E09C, 0x44922709, 
		0xC0EE5BF1, 0x4564D1FE, 0xAFCB7EBB, 0xF5FD48D7, 0xF6FC49D5, 0x69893C3F, 0x35BD0857, 0x2047F2B8, 
		0x2DB50047, 0x96DC6995, 0xBA318454, 0x1554E19E, 0xA0CE7BB1, 0xE504B13E, 0xAAC87DBD, 0x4C63D6F0, 
		0x2EB40145, 0xB336835A, 0xDBE752E3, 0xF70ABF22, 0xBBC772A3, 0xC41BAE00, 0x1356E39A, 0x36BC0955, 
		0x658D3837, 0x9D2C996E, 0x259EC84, 0x90DE6B91, 0x5AD1877, 0xFAB1E7B, 0x33BF0A53, 0x91289D66, 
		0xB0378258, 0xF108BD26, 0x3E4DF8AC, 0xCD1CA90E, 0x1EA41165, 0xCAA1F79, 0x8ED46185, 0x4F62D7F2, 
		0x14A21769, 0xCB1EAB0A, 0xDDE550E7, 0x5A982D1D, 0x2BB70243, 0x9FDB6E9B, 0x6178CDC6, 0x384FFAA8, 
		0x28B60341, 0x2544F1BE, 0x1BA71263, 0x5168DDE6, 0x7675C0DC, 0x677ACFC2, 0x93DF6A93, 0xDF12A712, 
		0x45BEE80, 0x1A51E494, 0xAE3D884C, 0xB8C673A1, 0xEBF742C3, 0xC118AD06, 0xD514A11E, 0xB635805C, 
		0x972A9F62, 0xCFEB5EFB, 0xEEF441C5, 0xF40BBE20, 0x3AB80D5D, 0x7970C5D6, 0x17A3166B, 0xE2F045CD, 
		0x8C239670, 0x2940F5B6, 0x59992C1F, 0x9CDA6F99, 0x7783362B, 0x3CBA0F59, 0xF0FE4BD1, 0x4E942105, 
		0x7B873223, 0x4366D3FA, 0xAA81D7D, 0xA43B8E40, 0xBDC570A7, 0xA5CD78B7, 0x7077C2D8, 0x586FDAE8, 
		0x11A1146F, 0xF209BC24, 0x85FEA88, 0xE7F346CB, 0xA2398C44, 0x39B90C5F, 0xC6EC59F5, 0xAD3C894E, 
		0xE007B238, 0x8DD56087, 0x95DD6897, 0xC5ED58F7, 0xAE1B71, 0xD1E154EF, 0xB7C376AB, 0x3FBB0E5B, 
		0x8625907C, 0xB534815E, 0x344BFEA0, 0x7D853027, 0x7376C3DA, 0x7F72C7D2, 0xEC03B630, 0x509E2B11, 
		0xE900B536, 0x982F9A68, 0x82D0658D, 0x6C8A3F39, 0x576ADFE2, 0xBF328752, 0x9A91C7F, 0x3B4EFBAA, 
		0x6F8B3E3B, 0x21B1044F, 0xDC13A610, 0xFE0DB82C, 0x74823729, 0x559D2817, 0x3249FCA4, 0xC3EF5AF3, 
		0xE5DE88C, 0x539F2A13, 0xB4C277A9, 0xA9C97CBF, 0xFFFB4EDB, 0x2A41F4B4, 0x1C53E690, 0x8A219474, 
		0xF80FBA28, 0xA73A8F42, 0x4793260B, 0xFAF84DDD, 0x6AC1975, 0x75AEF82, 0x5D6CD9EE, 0x5E6DD8EC, 
		0x4B972203, 0x99D96C9F, 0x1F52E792, 0x7181342F, 0x3AF1A73, 0xDEE451E5, 0xDA11A414, 0xC9E95CFF, 
		0x78863321, 0x84D26789, 0x22B0054D, 0xB5EEB8A, 0x4A61D4F4, 0x8326937A, 0xFCFA4FD9, 0x6279CCC4, 
		0xE306B33A, 0xC81FAA08, 0x687FCAC8, 0xE8F643C1, 0x608E3B31, 0xAB3E8B4A, 0x5269DCE4, 0x7C73C6D0, 
		0x6D7CC9CE, 0xF9F94CDF, 0x4960D5F6, 0xFB0EBB2A, 0x92299C64, 0x24B20749, 0xA3CF7AB3, 0xA1388D46, 
		0x546BDEE0, 0x2346F3BA, 0x5B6EDBEA, 0xCCEA5FF9, 0x158ED86, 0xEA01B434, 0x1DA51067, 0x638F3A33, 
		0x18A61361, 0x6B7ECBCA, 0xACCA7FB9, 0xCAE85DFD, 0x1057E298, 0x27B3064B, 0xD5CE98E, 0xE1F144CF, 
		0xB8849446, 0xA79BAA67, 0xAC90BC7A, 0xA09CA46E, 0x2915ADEE, 0xB08C845E, 0xB4888C52, 0x1E22C3B7, 
		0xEBD732B3, 0xDAE650E0, 0xBC809C4A, 0xF0CC049E, 0x2519B5FA, 0xC30E781, 0x704C1F05, 0xAD91BE79, 
		0x112DDDA6, 0x59654D7E, 0x122EDBA3, 0xA69AA864, 0x211DBDF6, 0x82BEE008, 0x9CA0DC2A, 0x2B17A9E8, 
		0x764A130F, 0xF33E184, 0x79450D1E, 0x74481709, 0x477B715C, 0x7F430114, 0xA995B675, 0x1B27C9B8, 
		0x6C502721, 0x261AB3FF, 0x48746F4D, 0xFDC11E89, 0xEDD13EB9, 0xE4D82CA2, 0x2C10A7E1, 0x172BD1AC, 
		0xEFD33ABF, 0x7E420317, 0x3E0283D7, 0x2A16ABEB, 0xAA96B070, 0x33FF990, 0xEAD630B0, 0xCEF278DC, 
		0xDFE35AEF, 0x1C20C7B1, 0xF8C41486, 0x1824CFBD, 0xC3FF62CB, 0x4D716542, 0xDEE258EC, 0x417D7D56, 
		0xDCE05CEA, 0xC9F576D5, 0x5B674978, 0x39058DDE, 0x300C9FC5, 0xFCC01C8A, 0x69552D2E, 0xAE92B87C, 
		0xD2EE40F8, 0x58644F7D, 0xF7CB0A97, 0xC1FD66CD, 0xC0FC64CE, 0xB5898E51, 0x81BDE60D, 0x7B470918, 
		0x89B5F615, 0xE0DC24AE, 0xD31E582, 0x68542F2D, 0xF2CE0098, 0x38048FDD, 0xF4C80C92, 0x5F634174, 
		0x88B4F416, 0xA36EB8B, 0xDBE752E3, 0x360A93CF, 0xFBC71283, 0x271BB1FC, 0x6A562B2B, 0x80BCE40E, 
		0xB18D865D, 0x102CDFA5, 0x6559353A, 0xE2DE20A8, 0x91ADC63D, 0x97ABCA37, 0x83BFE20B, 0x1428D7A9, 
		0xB37E988, 0x340897C9, 0x714D1D06, 0x201CBFF5, 0x98A4D426, 0x96AAC834, 0xE8D434B6, 0x5E624377, 
		0x9EA2D82C, 0x221EBBF3, 0xD9E556E5, 0xA498AC62, 0x8BB7F213, 0xE7DB2AA7, 0x44787759, 0x734F1900, 
		0x8AB6F010, 0x78440F1D, 0x9BA7D223, 0x54685769, 0x49756D4E, 0x467A735F, 0xE3DF22AB, 0x2E12A3E7, 
		0x675B313C, 0x6D512522, 0x13DFD96, 0xFAC61080, 0xCBF772D3, 0x2418B7F9, 0x2814AFED, 0x935ED8E, 
		0x162AD3AF, 0xD7EB4AF7, 0xC8F474D6, 0x370B91CC, 0x84B8EC02, 0x4C706741, 0x9FA3DA2F, 0xCCF07CDA, 
		0x1F23C1B4, 0x7C400711, 0xA599AE61, 0xE6DA28A4, 0xBF839A4F, 0x86BAE804, 0xC2FE60C8, 0xA894B476, 
		0xBB879243, 0x5A664B7B, 0x94A8CC32, 0x73BF19C, 0xF9C51685, 0xF1CD069D, 0x4B776948, 0x536F5960, 
		0x9DA1DE29, 0x350995CA, 0x635F3930, 0xCFF37ADF, 0x539F59A, 0x85B9EE01, 0xD0EC44FE, 0x3CFF95, 
		0x3B0789D8, 0xE9D536B5, 0xE1DD26AD, 0xD1ED46FD, 0x92AEC038, 0xDDE15EE9, 0xFFC31A8F, 0x87BBEA07, 
		0x1925CDBE, 0x834EF8D, 0x774B110C, 0xB9859645, 0x4A766B4B, 0x4E726347, 0x3F0381D4, 0xA29EA068, 
		0x3C0087D1, 0x132FD9A0, 0xECD03CBA, 0xB68A8854, 0x566A536F, 0xE32E387, 0x95A9CE31, 0x724E1B03, 
		0xB78B8A57, 0x8DB1FE19, 0x2F13A1E4, 0x310D9DC6, 0xBE82984C, 0xA19DA66D, 0x7549150A, 0xD3EF42FB, 
		0x615D3D36, 0xA39FA26B, 0xFEC2188C, 0xF5C90E91, 0xC7FB6AC7, 0x7D410512, 0x6F532124, 0x1D21C5B2, 
		0x330F99C0, 0x63AF39F, 0xAF93BA7F, 0xC4F86CC2, 0x90ACC43E, 0x665A333F, 0x506C5F65, 0x516D5D66, 
		0xAB97B273, 0xE5D92EA1, 0x6E522327, 0xBD819E49, 0x93AFC23B, 0xD8E454E6, 0x2D11A5E2, 0xD5E94EF1, 
		0xBA869040, 0xEED238BC, 0x8CB0FC1A, 0x625E3B33, 0x5D614572, 0x1A26CBBB, 0xC6FA68C4, 0x4579755A, 
		0x3A068BDB, 0x231FB9F0, 0x437F7950, 0xCAF670D0, 0xB28E8058, 0x23EFB93, 0x5569556A, 0x4F736144, 
		0x407C7F55, 0xC5F96EC1, 0x5C604771, 0x320E9BC3, 0x1529D5AA, 0x8EB2F81C, 0xF3CF029B, 0x438F799, 
		0x576B516C, 0x7A460B1B, 0x526E5B63, 0xD6EA48F4, 0x64583739, 0x3D0185D2, 0x99A5D625, 0xB38F825B, 
		0x9AA6D020, 0x427E7B53, 0xF6CA0894, 0xD4E84CF2, 0x6B572928, 0x8FB3FA1F, 0x605C3F35, 0xCDF17ED9, 
		0xB821F780, 0xA71FD69F, 0xAC09CB94, 0xA011DF98, 0x29185F11, 0xB031EF88, 0xB439E38C, 0x1E760626, 
		0xEB8702D3, 0xDAE551E2, 0xBC29FB84, 0xF0B12FC8, 0x25004B1D, 0xC523034, 0x70AAB448, 0xAD0BC895, 
		0x11681729, 0x59F8CF61, 0x126E122A, 0xA61DD59E, 0x21084719, 0x8255B9BA, 0x9C699BA4, 0x2B1C5913, 
		0x76A6BE4E, 0xF543537, 0x79B8AF41, 0x74A2B84C, 0x47C4ED7F, 0x7FB4A547, 0xA903C491, 0x1B7C0923, 
		0x6C929054, 0x26064E1E, 0x48DAFC70, 0xFDAB38C5, 0xED8B08D5, 0xE49913DC, 0x2C125014, 0x17641D2F, 
		0xEF8F0ED7, 0x7EB6A646, 0x3E366606, 0x2A1E5A12, 0xAA05C192, 0x34C213B, 0xEA8501D2, 0xCECD6DF6, 
		0xDFEF5EE7, 0x1C720024, 0xF8A137C0, 0x187A0C20, 0xC3D77AFB, 0x4DD0F375, 0xDEED5DE6, 0x41C8E779, 
		0xDCE95BE4, 0xC9C364F1, 0x5BFCC963, 0x39386F01, 0x302A7408, 0xFCA93BC4, 0x69989F51, 0xAE0DCD96, 
		0xD2F549EA, 0x58FACC60, 0xF7BF26CF, 0xC1D37CF9, 0xC0D17FF8, 0xB53BE08D, 0x8153BCB9, 0x7BBCA943, 
		0x8943A4B1, 0xE0911FD8, 0xD503335, 0x689A9C50, 0xF2B529CA, 0x383A6C00, 0xF4B923CC, 0x5FF4C567, 
		0x8841A7B0, 0xA5E3A32, 0xDBE752E3, 0x36267E0E, 0xFBA732C3, 0x27044D1F, 0x6A9E9A52, 0x8051BFB8, 
		0xB133EC89, 0x106A1428, 0x65808B5D, 0xE29519DA, 0x91738CA9, 0x977F86AF, 0x8357BABB, 0x1462182C, 
		0xB5C3933, 0x3422780C, 0x71A8B749, 0x200A4418, 0x986197A0, 0x967D85AE, 0xE88107D0, 0x5EF6C666, 
		0x9E6D9DA6, 0x220E421A, 0xD9E354E1, 0xA419D39C, 0x8B47A2B3, 0xE79F16DF, 0x44C2E87C, 0x73ACB14B, 
		0x8A45A1B2, 0x78BAAC40, 0x9B6792A3, 0x54E2D86C, 0x49D8FF71, 0x46C6EE7E, 0xE3971ADB, 0x2E165616, 
		0x67848D5F, 0x6D909355, 0x1482739, 0xFAA531C2, 0xCBC762F3, 0x2402481C, 0x281A5C10, 0x9583F31, 
		0x16661E2E, 0xD7FF46EF, 0xC8C167F0, 0x37247D0F, 0x8459B3BC, 0x4CD2F074, 0x9F6F9EA7, 0xCCC96BF4, 
		0x1F740527, 0x7CB2A044, 0xA51BD09D, 0xE69D15DE, 0xBF2FFE87, 0x865DB5BE, 0xC2D579FA, 0xA801C790, 
		0xBB27F283, 0x5AFECA62, 0x947983AC, 0x7442D3F, 0xF9A334C1, 0xF1B32CC9, 0x4BDCF973, 0x53ECD16B, 
		0x9D6B98A5, 0x35207B0D, 0x638C815B, 0xCFCF6EF7, 0x5402B3D, 0x855BB0BD, 0xD0F14FE8, 0x4A2438, 
		0x3B3C6903, 0xE98304D1, 0xE1931CD9, 0xD1F34CE9, 0x927589AA, 0xDDEB58E5, 0xFFAF3EC7, 0x875FB6BF, 
		0x19780F21, 0x85A3C30, 0x77A4BD4F, 0xB923F481, 0x4ADEFA72, 0x4ED6F676, 0x3F346507, 0xA215D99A, 
		0x3C326004, 0x136C112B, 0xEC890BD4, 0xB63DE58E, 0x56E6DE6E, 0xE563636, 0x957B80AD, 0x72AEB24A, 
		0xB73FE68F, 0x8D4BA8B5, 0x2F145517, 0x31287709, 0xBE2DFD86, 0xA113DC99, 0x75A0BB4D, 0xD3F74AEB, 
		0x61888759, 0xA317DA9B, 0xFEAD3DC6, 0xF5BB20CD, 0xC7DF76FF, 0x7DB0A345, 0x6F949557, 0x1D700325, 
		0x332C710B, 0x6462E3E, 0xAF0FCE97, 0xC4D973FC, 0x90718FA8, 0x66868E5E, 0x50EAD468, 0x51E8D769, 
		0xAB07C293, 0xE59B10DD, 0x6E969656, 0xBD2BF885, 0x93778AAB, 0xD8E157E0, 0x2D105315, 0xD5FB40ED, 
		0xBA25F182, 0xEE8D0DD6, 0x8C49ABB4, 0x628E825A, 0x5DF0C365, 0x1A7E0A22, 0xC6DD75FE, 0x45C0EB7D, 
		0x3A3E6A02, 0x230C411B, 0x43CCE17B, 0xCAC561F2, 0xB235E98A, 0x24E223A, 0x55E0DB6D, 0x4FD4F577, 
		0x40CAE478, 0xC5DB70FD, 0x5CF2C064, 0x322E720A, 0x15601B2D, 0x8E4DADB6, 0xF3B72ACB, 0x442283C, 
		0x57E4DD6F, 0x7ABEAA42, 0x52EED26A, 0xD6FD45EE, 0x6482885C, 0x3D306305, 0x996394A1, 0xB337EA8B, 
		0x9A6591A2, 0x42CEE27A, 0xF6BD25CE, 0xD4F943EC, 0x6B9C9953, 0x8F4FAEB7, 0x608A8458, 0xCDCB68F5, 
		0x1D423180, 0x23632E9F, 0x357E2594, 0x2D6A2998, 0x24EAA011, 0xD5A3988, 0x5563D8C, 0x4AB39726, 
		0xBBB762D3, 0xD9E453E2, 0x154E3584, 0x8D9A79C8, 0x3CFEAC1D, 0x6E858534, 0x9601F948, 0x377D2495, 
		0x54A29829, 0xC47AD061, 0x52A79B2A, 0x21602F9E, 0x34F2A819, 0x690C0BBA, 0x552E15A4, 0x20ECA213, 
		0x9A0BFF4E, 0x68808637, 0x841AF041, 0x9E0DFD4C, 0xF858CE7F, 0x8810F647, 0x3F712091, 0x40BC9223, 
		0xAE25E554, 0x3AFBAF1E, 0xE649C170, 0x978D74C5, 0xB7BD64D5, 0xA5A66DDC, 0x2EE5A514, 0x58A89E2F, 
		0xB3BB66D7, 0x8A13F746, 0xAD3B706, 0x22EFA312, 0x39742392, 0x70948A3B, 0xB9B463D2, 0xF1D847F6, 
		0xD3EB56E7, 0x4EB59524, 0x9D8271C0, 0x46B99120, 0xEBCF4AFB, 0xEC46C475, 0xD1E857E6, 0xF452C879, 
		0xD5EE55E4, 0xFFD140F1, 0xC07CD263, 0x4DAB001, 0x16C1B908, 0x958E75C4, 0xA42AE051, 0x31782796, 
		0xC9FC5BEA, 0xC679D160, 0x83937ECF, 0xEFC948F9, 0xEDCA49F8, 0x7553C8D, 0x6F0908B9, 0x801CF243, 
		0x7F1100B1, 0xADAA69D8, 0x6C868435, 0xA629E150, 0x899C7BCA, 0x6D9B100, 0x85967DCC, 0xC870D667, 
		0x7D1201B0, 0x628F8332, 0xDBE752E3, 0x1ACBBF0E, 0x9B8772C3, 0x38F8AE1F, 0xA22FE352, 0x6D0A09B8, 
		0xF593889, 0x56A19928, 0xBC3EEC5D, 0xA9AC6BDA, 0x4F3918A9, 0x43331EAF, 0x6B0F0ABB, 0x5EAD9D2C, 
		0x608C8233, 0x1ECDBD0C, 0x9402F849, 0x36F1A918, 0x5D2211A0, 0x41301FAE, 0xBDB261D0, 0xCA73D766, 
		0x512817A6, 0x32F7AB1A, 0xDFE150E1, 0x25662D9C, 0x7B1702B3, 0xA3A36EDF, 0xFE5DCD7C, 0x9004FA4B, 
		0x791403B2, 0x8619F140, 0x5B2712A3, 0xDE6DDD6C, 0xE44AC071, 0xFA5BCF7E, 0xABAF6ADB, 0x2AE3A716, 
		0xB838EE5F, 0xAC26E455, 0x74928839, 0x998473C2, 0xFBD742F3, 0x3EFDAD1C, 0x26E9A110, 0x648A8031, 
		0x5AAB9F2E, 0xC3F35EEF, 0xFDD241F0, 0x18C8BE0F, 0x65060DBC, 0xEE45C574, 0x532B16A7, 0xF5DE45F4, 
		0x48B09627, 0x8E15F544, 0x27652C9D, 0xA1A06FDE, 0x134B3687, 0x61000FBE, 0xE9CC4BFA, 0x3D722190, 
		0x1B473283, 0xC27FD362, 0x45361DAC, 0x78988E3F, 0x9F8170C1, 0x8F9978C9, 0xE04CC273, 0xD064DA6B, 
		0x572D14A5, 0x1CCEBC0D, 0xB034EA5B, 0xF3DB46F7, 0x7C9E8C3D, 0x67050CBD, 0xCDFA59E8, 0x76918938, 
		0xDCB203, 0xBFB160D1, 0xAFA968D9, 0xCFF958E9, 0x493C1BAA, 0xD7ED54E5, 0x938B76C7, 0x63030EBF, 
		0x44BA9021, 0x66898130, 0x9808FE4F, 0x1F413081, 0xE24FC372, 0xEA43C776, 0x8D0B607, 0x296C2B9A, 
		0xED5B504, 0x50A49A2B, 0xB5BE65D4, 0x1503F8E, 0xDA6BDF6E, 0x6A838736, 0x47351CAD, 0x9207FB4A, 
		0x3533E8F, 0x771D04B5, 0x28E0A617, 0x14C2B809, 0x11483786, 0x2F692899, 0x9C0EFC4D, 0xCBFF5AEB, 
		0xB432E859, 0x2B6F2A9B, 0x918877C6, 0x87957CCD, 0xE3C34EFF, 0x8C16F445, 0xA820E657, 0x4CB69425, 
		0x10C4BA0B, 0x7A9B8F3E, 0x337B2697, 0xE5C64DFC, 0x4D3A19A8, 0xBA3BEF5E, 0xD661D968, 0xD462D869, 
		0x3B772293, 0xA7A56CDD, 0xAA23E756, 0x174D3485, 0x4B3F1AAB, 0xDDE251E0, 0x2CE6A415, 0xC7F55CED, 
		0x19443382, 0xB1B867D6, 0x751E05B4, 0xB237EB5A, 0xCC76D465, 0x42BF9322, 0xE1C04FFE, 0xFC5ECC7D, 
		0x2DFB302, 0x30F4AA1B, 0xF054CA7B, 0xF9D443F2, 0x95C3B8A, 0x72978B3A, 0xDC6EDC6D, 0xE840C677, 
		0xF651C978, 0xE7C54CFD, 0xCE75D564, 0x12C7BB0A, 0x5CAE9C2D, 0x711807B6, 0x8B9F7ACB, 0x7E9D8D3C, 
		0xD868DE6F, 0x821FF342, 0xD267DB6A, 0xC1F05FEE, 0xBE3DED5C, 0xCD6B405, 0x5F2110A1, 0xB5F3A8B, 
		0x592413A2, 0xF257CB7A, 0x81907FCE, 0xC5F65DEC, 0xA02CE253, 0x731B06B7, 0xB631E958, 0xF7DD44F5, 
	};



	static const DWORD Inv_boxes[256*4] =
	{
		0xE20B7CC3, 0xE1C9C9EC, 0x71089F88, 0x24F2AFA8, 0x79C723A9, 0x43E9158D, 0x19F4723E, 0x21AF6BD9, 
		0xE756B8B2, 0x44C1FE3F, 0x23DA441A, 0x97E08A67, 0x4E7B6DDD, 0x6567A257, 0x32E8BDB4, 0x3D0FEA27, 
		0xFBF6394C, 0xD5B732B7, 0x2AA262D7, 0x536C76CF, 0xB0D9A751, 0xA05CC413, 0x113BCE1F, 0x74555BF9, 
		0x55F30791, 0x27301A87, 0x59D6E52D, 0x68F5DA07, 0x9F2F3646, 0x618DFCCA, 0x9BC568DB, 0xF664411C, 
		0xD8254AE7, 0xCAD50666, 0xD992D00B, 0x6FDD31B5, 0x4E3692C, 0xA5010062, 0xD400A85B, 0x69646EF, 
		0xAAE657F1, 0x309D9277, 0xD29FD905, 0xF7D3DBF0, 0x52DBEC23, 0x3602E329, 0xAE0C096C, 0x2687806B, 
		0xEAC4C0E2, 0xAB51CD1D, 0x35C05606, 0x554F3C0, 0x917FFB39, 0x50AEC3E0, 0xE5239771, 0x9807DDF4, 
		0xB5846320, 0xB16E3DBD, 0x28D74D14, 0x17A4BF41, 0x402BA0A2, 0x937B1, 0x8C68B90, 0xEE2E9E7F, 
		0x99B04718, 0x2018F135, 0x425E8F61, 0x134EE1DC, 0x7F5852F7, 0x67128D94, 0xADCEBC43, 0x38522E56, 
		0x2FFFA6A6, 0x12F97B30, 0x804D0297, 0xC7477E36, 0x8B400B99, 0x1843E8D2, 0xB433F9CC, 0xE3BCE62F, 
		0x4B26A9AC, 0x8FAA5504, 0x1CA9B64F, 0xF4116EDF, 0x721DC03, 0xB7F14CE3, 0xDD788E96, 0x4DB9D8F2, 
		0x9657108B, 0x25453544, 0x7EEFC81B, 0xC53251F5, 0xFEE6022, 0x3A270195, 0x8AF79175, 0x694240EB, 
		0xF5A6F433, 0x5BA3CAEE, 0x7BB20C6A, 0xB2AC8892, 0x312A089B, 0xFA41A3A0, 0x1EDC998C, 0xFCDED2FE, 
		0x4953866F, 0xE4940D9D, 0xAC7926AF, 0x9595A5A4, 0xD6758798, 0x930AD4FA, 0x63F8D309, 0x8882BEB6, 
		0x3CB829E, 0xBD4BDF01, 0x603A6626, 0x2C3D1389, 0xFD694812, 0x108C54F3, 0xDBE7FFC8, 0xA4B69A8E, 
		0xB8161B70, 0x57862852, 0xF14CAAAE, 0xAFBB9380, 0xB9A1819C, 0x1F6B0360, 0xB043EBF, 0x7A059686, 
		0x37B579C5, 0xFEABFD3D, 0x971117C, 0x4FCCF731, 0x2D8A8965, 0xE59FACE, 0x7797EED6, 0x86D273C9, 
		0xC485CB19, 0x6E6AAB59, 0xDA506524, 0xD15D6C2A, 0x7870B945, 0xA229EBD0, 0xF28E1F81, 0x92BD4E16, 
		0xCF88C217, 0x4A913340, 0xA39E713C, 0xDF0DA155, 0xF983168F, 0x419C3A4E, 0x5EFE0E9F, 0x624F49E5, 
		0xDEBA3BB9, 0x2B15F83B, 0x48E41C83, 0x90C861D5, 0x7620743A, 0xA8937832, 0x6A80F5C4, 0x5D3CBBB0, 
		0x75E2C115, 0x737DB04B, 0x4C0E421E, 0x84A75C0A, 0x7D2D7D34, 0x9A72F237, 0x94223F48, 0x161325AD, 
		0x5631B2BE, 0xBF3EF0C2, 0x2960D7F8, 0xD0EAF6C6, 0x70BF0564, 0x5A145002, 0xEC5BB1BC, 0x47034B10, 
		0xC2CD50D, 0xCE3F58FB, 0x1B815DFD, 0x1BEAD5D, 0x8935245A, 0x15D19082, 0xDCCF147A, 0xC917B349, 
		0xBBD4AE5F, 0x46B4D1FC, 0xB31B127E, 0x1A36C711, 0xD7C21D74, 0xCC4A7738, 0xBA6334B3, 0x54449D7D, 
		0x6B376F28, 0x7C9AE7D8, 0x66A51778, 0x64D038BB, 0x1D1E2CA3, 0x838FB7B8, 0x82382D54, 0x72CA2AA7, 
		0x8510C6E6, 0x14660A6E, 0x27C1872, 0xA7742FA1, 0xF8348C63, 0x457664D3, 0xBCFC45ED, 0x9D5A1985, 
		0x3F7AC5E4, 0xFF1C67D1, 0xE6E1225E, 0x6DA81E76, 0x5119590C, 0xA924E2DE, 0xAB3A453, 0xCDFDEDD4, 
		0xB646D60F, 0xEF990493, 0xC1D80F68, 0x9CED8369, 0xE8B1EF21, 0xE07E5300, 0x81FA987B, 0xA1EB5EFF, 
		0x3ECD5F08, 0xC8A029A5, 0x3CB870CB, 0x3B909B79, 0x5C8B215C, 0x8765E925, 0x5F499473, 0x8E1DCFE8, 
		0xEB735A0E, 0x8DDF7AC7, 0xCB629C8A, 0xD9B4FE1, 0x58617FC1, 0xE90675CD, 0xA6C3B54D, 0x3477CCEA, 
		0x335F2758, 0x8C68E02B, 0x9E98ACAA, 0xEDEC2B50, 0xC06F9584, 0xBE896A2E, 0x39E5B4BA, 0xF339856D, 
		0xC3AD20AB, 0x6C1F849A, 0x2E483C4A, 0x226DDEF6, 0xD32843E9, 0xC21ABA47, 0xC6F0E4DA, 0xF0FB3042, 
		0x1558D9C2, 0xD7EDF6C1, 0x16BB9251, 0xEC8BB204, 0xD907B359, 0xF7319763, 0xEA562439, 0xB14FC301, 
		0x489CA8C7, 0xDFDA2564, 0xC4600003, 0xFEAE7DB7, 0x6549C76E, 0x79864D45, 0xF699AE12, 0x11CE3D1D, 
		0xE81D56DB, 0xA916ADF5, 0xBC46CD0A, 0x7252D573, 0xC7834B90, 0x42E00980, 0x25EA0531, 0x4B7FE354, 
		0xED238B75, 0x2E3E9D07, 0xC8C13779, 0xEBFE1D48, 0x31125CBF, 0x93D8D041, 0xDB4CC1BB, 0x7A6506D6, 
		0x3B6EFDF8, 0xCB227CEA, 0x8CF411F9, 0xC315AF4F, 0xFD4D3624, 0x1F247885, 0x1E8C41F4, 0x8862F526, 
		0xF873EB8A, 0x83B66D10, 0x81FD1FF2, 0xCDFFEAD7, 0xC5C83972, 0x1CC73316, 0x122D768E, 0x99A47106, 
		0xDAE4F8CA, 0x4FE9078B, 0xDE721C15, 0x4AD7DA25, 0x61DF23B1, 0xB0E7FA70, 0x3DB36BC5, 0x19F9EEB8, 
		0x9A473A95, 0x7019A791, 0xC9690E08, 0xBA9B5B37, 0x3584B860, 0x1713AB20, 0xD8AF8A28, 0x30BA65CE, 
		0xAE6302B9, 0x6D52F00, 0x40AB7B62, 0x50C5C633, 0x4676ED5F, 0xCA98E47, 0xD098598D, 0x4C0A4C18, 
		0xE182BC0F, 0xE75F2A32, 0x53268DA0, 0x595A2CE7, 0x5E2F83AB, 0x5DCCC838, 0x2DDDD694, 0xA2C235C3, 
		0x388DB66B, 0xB4711EAF, 0xB792553C, 0xF4AC5D4, 0x3FF81927, 0xEF68F997, 0x66AA8CFD, 0xA7FCE86D, 
		0x493491B6, 0x5B115E05, 0xF1EC015E, 0x2C75EFE5, 0xF044382F, 0x39258F1A, 0xE9B56FAA, 0x5C64F149, 
		0xB8D029D5, 0xBDEEF47B, 0xAC28705B, 0xB2AC8892, 0x342C8111, 0x5F87BADA, 0xC2BD963E, 0xC0F6E4DC, 
		0x4DA27569, 0x8A2987C4, 0x6702B58C, 0x8B81BEB5, 0x6BA382F6, 0x14F0E0B3, 0xE6F71343, 0x9C9AACA8, 
		0xD5A68423, 0x55FB1B9D, 0x24423C40, 0x2337930C, 0x776C08DD, 0x9270E930, 0xF9DBD2FB, 0xA8BE9484, 
		0x83F6A98, 0x980C4877, 0x528EB4D1, 0xA5B79A8F, 0xBFA58699, 0x75277A3F, 0x1A1AA52B, 0x1BB29C5A, 
		0xAB5DDF17, 0xB5D927DE, 0x6F356629, 0xD2D32B6F, 0x94AD7F0D, 0x47DED42E, 0x89CACC57, 0xCC57D3A6, 
		0x9BEF03E4, 0x748F434E, 0x4E413EFA, 0x434830F1, 0x6E9D5F58, 0x37CFCA82, 0x903B9BD2, 0xA36A0CB2, 
		0x96E60DEF, 0x8F175A6A, 0x80552683, 0x13854FFF, 0x9D3295D9, 0x821E5461, 0xE02A857E, 0x516DFF42, 
		0xA41FA3FE, 0xBDC210B, 0xFA389968, 0xD645CFB0, 0x3E502056, 0x8D5C2888, 0x9ED1DE4A, 0x229FAA7D, 
		0xFCE50F55, 0x63945153, 0x1066046C, 0xB97810A4, 0x33592E5D, 0x6CD62DBA, 0x3C1B52B4, 0xD01B736, 
		0x2F96A476, 0x20D4D89F, 0x7EF3E209, 0xF4D2DCF0, 0xA1217E50, 0xA74187A, 0x4595A6CC, 0x1D6F0A67, 
		0x32F1172C, 0x217CE1EE, 0x9F79E73B, 0xA0894721, 0x2B0040A9, 0xCFB49835, 0xD13060FC, 0x99753E9, 
		0xCA8A459B, 0xAAF5E666, 0x5366493, 0x28E30B3A, 0xDC396EF7, 0x545322EC, 0x7D10A99A, 0x5AB96774, 
		0x294B324B, 0x84C3C25C, 0xBB336246, 0xCE1CA144, 0x8B93D, 0x9193A2A3, 0x26094EA2, 0xD40EBD52, 
		0xEE2FCA5, 0x782E7434, 0x623C6822, 0x6A0BBB87, 0x2AA879D8, 0x6840C965, 0xE261F79C, 0x443D9FBD, 
		0x64E1FE1F, 0x243CBDF, 0xFF0644C6, 0xB63A6C4D, 0x77D1671, 0x3AC6C489, 0xAD80492A, 0xE3C9CEED, 
		0x58F21596, 0x872089CF, 0xC62B72E1, 0xF3A773BC, 0xAFCB3BC8, 0x60771AC0, 0xE4BC61A1, 0xF57AE581, 
		0xD37B121E, 0xBE0DBFE8, 0xA654D11C, 0x8EBF631B, 0x9505467C, 0x7BCD3FA7, 0x57B0697F, 0x3EBF2AE, 
		0x6D7E14CB, 0xC15EDDAD, 0x7CB890EB, 0x856BFB2D, 0x7F5BDB78, 0x1851D7C9, 0xDD915786, 0x69E8F014, 
		0x41034213, 0x76C431AC, 0x8688B0BE, 0xF20F4ACD, 0x71B19EE0, 0x974E349E, 0xFB90A019, 0x27A177D3, 
		0xB304B1E3, 0x1A0804C, 0x5618500E, 0x73FAEC02, 0x3667F3F3, 0x49E5DE2, 0xEEC0C0E6, 0xE51458D0, 
		0x46FDD835, 0xF3D2DBF7, 0xA5B64B36, 0x95961ECC, 0x199743F9, 0x2FB379D7, 0x480023CA, 0x51E71B91, 
		0x828CDD68, 0xC4017EFF, 0x7E2419E4, 0xB059ADDE, 0x57E37445, 0x98695F59, 0x878A08D6, 0xD0190731, 
		0x372C1C8, 0x889EF89, 0x58E9109C, 0x4CF16952, 0x9D6F8AE7, 0xFE2D9A62, 0xF4212B05, 0x61C74E6B, 
		0x3DAF6FCD, 0x20B91D0E, 0xDF1363E8, 0xE03952CB, 0xC78A511, 0xC6F45BB3, 0x52E5A1FB, 0x7B22CC5A, 
		0x70D9E21B, 0x3C58F0EB, 0xEA35E3AC, 0xB8B55E3, 0x53123EDD, 0x3A5C9F3F, 0x9265EE3E, 0x7CD13CA8, 
		0x6DCF90D8, 0xA8490AA3, 0xE33BE8A1, 0xE1CECDED, 0xD61D68E5, 0xD9170C3C, 0x33529432, 0xBA551CB9, 
		0xFADCD0FA, 0xF723916F, 0x6C380FFE, 0xC9FE3F6A, 0xC107AB41, 0xF9DE6A90, 0xAD4FDF1D, 0xE7CAA239, 
		0x591E8FBA, 0x7838B50, 0x772A12E9, 0x857F2D9A, 0x9A9C7A15, 0xD8F3A37, 0xB1AE32F8, 0xA441D410, 
		0x7D26A38E, 0xCB0B1A26, 0xB55F7860, 0xDBE22970, 0x68C94566, 0xB7AA5D2C, 0x867D97F0, 0x1468026C, 
		0x9C9815C1, 0x410E28C7, 0x38A9BA73, 0x4408FD79, 0x31A7B17E, 0xD2EC227D, 0xC3F28E0D, 0xDC11D982, 
		0x93927118, 0x6F3AB594, 0x8C712697, 0x54E1CE2F, 0xE63D3D1F, 0x76DD8DCF, 0xB4A8E746, 0xE2CC7787, 
		0x2AB5AC69, 0xF7A1F7B, 0xF22544D1, 0x6BCBFF0C, 0x5A1C35D0, 0x3BAB0019, 0xAB4BB0C9, 0x7AD5537C, 
		0xCE0DCF98, 0xF0D0619D, 0x3654418C, 0xB2AC8892, 0x32A50B14, 0x999EC07F, 0xA3B224E2, 0xE8C0C6E0, 
		0xBC51736D, 0x37A3DEAA, 0x1C919647, 0x9F9AAFAB, 0xBDA6EC4B, 0xEEC4A934, 0xE93759C6, 0x8488B2BC, 
		0xB8A039F5, 0xE53F8775, 0x5C185A04, 0x29B71603, 0x722CC757, 0x6ECD2AB2, 0xC5F6E1D9, 0xA0B09E88, 
		0x214E8228, 0x126C6DB8, 0x9090CB72, 0xA9BE9585, 0xBBA2839F, 0x395E2555, 0x481313A, 0xACB8403B, 
		0x43FB0D8B, 0xC703C495, 0x2B42334F, 0xCD0F75F2, 0xB35B17B4, 0xC0F03467, 0xD4E84DA9, 0x49F7BCEC, 
		0xF127FEBB, 0x91675454, 0x5F1AE06E, 0x5614EB63, 0x837B424E, 0xD1EE9817, 0x25BFC8B0, 0x7428A883, 
		0xF829F5B6, 0x97E70AF, 0x4B0299A0, 0x9B6BE533, 0x2CB1C3BD, 0x707BA2, 0x34A164C0, 0x73DB5871, 
		0x187E484, 0xC205112B, 0x26BD72DA, 0x5BEBAAF6, 0x4E044C1E, 0x420C92AD, 0xCFFA50BE, 0x818E6702, 
		0xFB2B4FDC, 0x8A754943, 0x78207630, 0x6634BE99, 0x470A4713, 0xC809A04C, 0x576AE1C, 0x1F932C2D, 
		0x88806C0F, 0xCAFC8500, 0xEDC6135E, 0xCCF8EAD4, 0x3F5A4A81, 0x6A3C602A, 0x8B82D665, 0x712E7D3D, 
		0xEF333612, 0x62C5F401, 0x67C321BF, 0x97633B80, 0x1E64B30B, 0xAABC2FEF, 0x2E44E6F1, 0x8977F329, 
		0x946181EA, 0xEBC27C8A, 0x28408925, 0xFD2F2008, 0x274AEDFC, 0x4D06F674, 0xE8D805D, 0xA7436E7A, 
		0x55165109, 0xDDE646A4, 0x2D465C9B, 0x2855EEE, 0x169D2720, 0x8D86B9B1, 0x176AB806, 0x109948F4, 
		0xFCD8BF2E, 0x30502E58, 0x224C3842, 0x159F9D4A, 0xB65DC20A, 0x5EED7F48, 0x7FD386C2, 0x23BBA764, 
		0xFFDA0544, 0x5DEFC522, 0x1860DCDF, 0x24485796, 0x63326B27, 0xD8E0931A, 0x9E6D308D, 0xD7EAF7C3, 
		0xEC318C78, 0x3EADD5A7, 0x3556FBE6, 0xB957A6D3, 0xD51FD28F, 0x693EDA40, 0xA245BBC4, 0x64C19BD5, 
		0x653604F3, 0x139BF29E, 0x4AF50686, 0xA14701AE, 0x1B6266B5, 0xD31BBD5B, 0xAE4D6577, 0xF5D6B423, 
		0x6030D14D, 0x40F9B7E1, 0xA6B4F15C, 0x75DF37A5, 0x45FF625F, 0x4FF3D338, 0x8F739CFD, 0xF6D40E49, 
		0x1D660961, 0xDA15B656, 0x9694A4A6, 0x116ED7D2, 0xAFBAFA51, 0x501084B7, 0x8E8403DB, 0xBF53C907, 
		0x1A95F993, 0xBEA45621, 0x6741476, 0xE4C81853, 0x79D7E916, 0x8079F824, 0xDEE4FCCE, 0xA7CCAC5, 
		0xE3FC2F66, 0xCCFFEDD3, 0xA86F2C85, 0x883AD6B5, 0x8967E339, 0xAD5DCD0F, 0x1E07D068, 0xF93F8B71, 
		0x92F972A2, 0x1F5AE5E4, 0x3A3DFE5E, 0x4789C490, 0xFD505F77, 0x777B43B8, 0x942CCCA7, 0x7232BF0, 
		0x6CE5D223, 0x97CB9328, 0xF7348678, 0xEF4D486C, 0x71AEFDBD, 0x33BE78DE, 0x3F0F1FD4, 0xD96A7141, 
		0xB14BD71D, 0xA7391400, 0xD47F2FF, 0x2776D1C0, 0x66810B2C, 0xEA7FA9E6, 0xFB85E172, 0x3CE8405B, 
		0xC7C60150, 0x46D4F11C, 0x2BC7B6CA, 0x9571F92B, 0xC1AC773, 0x42BB251A, 0x7BCA24B2, 0xCF18B25C, 
		0xD1B4C24D, 0x572EB988, 0x25CCBBC3, 0xD0E9F7C1, 0x34CFFF6, 0x92826F9, 0x4CB02813, 0x4B38A39A, 
		0xC2F4E0DA, 0x3DB575D7, 0x262BE44C, 0xE01B70E9, 0x198F5BE1, 0xC04E8AD9, 0x51FB078D, 0xD48623C7, 
		0xABA079, 0x9DAF4A27, 0x3436F357, 0x610980A5, 0x825E0FBA, 0x911E2D2D, 0xB016E291, 0x5FF00A84, 
		0x3887945D, 0x153E3CEB, 0x415C7A95, 0xFC0D6AFB, 0xD7617C48, 0xB4793697, 0x63B3EAA6, 0x76267634, 
		0x8631DBBC, 0x100CDD61, 0xB79E6918, 0x16D96364, 0xB9956411, 0xF20667F2, 0xECAA17E3, 0xFFD98FC, 
		0x8C5502B3, 0x24918E4F, 0x6F028DAC, 0xFFEA3574, 0x231905C6, 0xC3A9D556, 0xB6C35C94, 0xD2539DC2, 
		0xAB88730A, 0x643B612F, 0x3B60CBD2, 0xD5DB164B, 0x211CA7A, 0xB524031B, 0x5594D38B, 0xCB77665A, 
		0x13EB82EE, 0xCE4587D0, 0x4A659616, 0xB2AC8892, 0xBB2F0E12, 0x80E465B9, 0xAC00F883, 0xDEE2FAC8, 
		0x4F57779C, 0xBDFAB017, 0x8FB25D3C, 0x848BB1BF, 0xB8C8519D, 0xDA8D2ECE, 0x297DDCC9, 0x9696A6A4, 
		0xBE1DEF98, 0x21A36FC5, 0x67E1E7C, 0xA9321909, 0x32E34D52, 0xD30EA84E, 0xE8C5C3E5, 0xAEBA9280, 
		0x50A63201, 0x7249A232, 0x8EEF68B0, 0xA0B19F89, 0xBCA7859B, 0x40014F19, 0x9F152024, 0xA664218C, 
		0xE5299163, 0x1DE08FE7, 0x5C17550B, 0x1151E8ED, 0x4533AE93, 0xEE107DE0, 0xF669B3F4, 0xE998F669, 
		0x39DAA1D1, 0x79704EB1, 0x4C4747F, 0xACF7976, 0x656654A3, 0xF0BC0DF1, 0xA1ECAA05, 0x368C9954, 
		0x37D1ACD8, 0x6054B529, 0x1CBDBA6B, 0x75C129BB, 0xAFE7A70C, 0x6E5FB820, 0xBF40DA14, 0xC57C6B53, 
		0x99C09E21, 0x1B3531E2, 0xA356C006, 0xF58EEC7B, 0x1A68046E, 0x12B6B762, 0xE474A4EF, 0x904318A1, 
		0x356BC6DB, 0x6B6D59AA, 0x3E522A58, 0x2A9A8346, 0x14630967, 0x178456E8, 0x688A0625, 0x8D08373F, 
		0x9E4815A8, 0xE2A11AEA, 0xD83744CD, 0xE6CECEEC, 0x446E9B1F, 0x2244304A, 0x9CF27FAB, 0x30592751, 
		0x2D1208CF, 0xDBD01B42, 0xDD05A547, 0x7D1F9AB7, 0x7A97113E, 0xA20BF58A, 0x5AC2EB0E, 0x69D733A9, 
		0x7FA5F0B4, 0xDC5890CB, 0x5EAD3F08, 0x310412DD, 0x54C9E607, 0x18D26E6D, 0x93A4472E, 0x5D4A6087, 
		0x8751375, 0xF862BEFD, 0x5878810D, 0x9B7AF422, 0x83033A36, 0x989DABAD, 0x749C1C37, 0x876CEE30, 
		0xC69B34DC, 0x4E0A4210, 0x521C5802, 0x81B95035, 0x43E61096, 0xF35B527E, 0xCDA2D85F, 0xA5837E03, 
		0xC4215EDF, 0xF1E1387D, 0x7EF8C538, 0x56738C04, 0x2C4F3D43, 0xFEB700F8, 0x731497BE, 0xF4D3D9F7, 
		0x2FA862CC, 0xB3F1BD1E, 0x48DFFC15, 0x4982C999, 0x1F695F5, 0x20FE5A49, 0x5B9FDE82, 0xDFBFCF44, 
		0x2820E945, 0x85D68433, 0xEB229C6A, 0x5925B481, 0x7C42AF3B, 0x59941F3, 0x53416D8E, 0xC89039D5, 
		0x2EF55740, 0xE793FB60, 0xAAD54686, 0xC113BF55, 0xE1464565, 0xEDF7226F, 0x6DB8E7AF, 0xCA2A53D6, 
		0x782D7B3D, 0xB924CFA, 0x8A80BCB6, 0x70F3C831, 0xA4DE4B8F, 0xEA0AD70, 0x9A27C1AE, 0x4DED1D9F, 
		0x8BDD893A, 0xBA723B9E, 0x6A306C26, 0xD63C49C4, 0xC9CD0C59, 0x67DC3EA0, 0xFAD8D4FE, 0x62EEDF2A, 
	};


	static const DWORD Inv_S_box_dword[256] = 
	{
		0x6253660E, 0x39083D55, 0x5A6B5E36, 0xE5D4E189, 0x31046C, 0x637026A, 0x95A491F9, 0x8390C64, 
		0x8FBE8BE3, 0x7041741C, 0x93A297FF, 0xAE9FAAC2, 0xB180B5DD, 0xC3F2C7AF, 0xE7D6E38B, 0xCBFACFA7, 
		0x4C7D4820, 0xD3E2D7BF, 0x9380D65, 0xB283B6DE, 0xAB9AAFC7, 0x1F2E1B73, 0xCFFECBA3, 0xB786B3DB, 
		0x4350068, 0xBE8FBAD2, 0x7342771F, 0x74457018, 0xF4C5F098, 0xEEDFEA82, 0xD9E8DDB5, 0xFBCAFF97, 
		0x64556008, 0x4B7A4F27, 0xA495A0C8, 0x233066E, 0x96A792FA, 0xF2C3F69E, 0x1322177F, 0xD3C0961, 
		0xDEEFDAB2, 0x7C4D7810, 0xA594A1C9, 0x3B0A3F57, 0x7243761E, 0xCAFBCEA6, 0xF3C2F79F, 0x7E4F7A12, 
		0x38093C54, 0x1E2F1A72, 0x91A095FD, 0x5667523A, 0x18291C74, 0xE9D8ED85, 0x14251078, 0x82B386EE, 
		0x4677422A, 0x6B5A6F07, 0x92A396FE, 0x79487D15, 0x5D6C5931, 0xBB8ABFD7, 0xE1D0E58D, 0x15241179, 
		0x4273462E, 0xC8F9CCA4, 0xC6F7C2AA, 0x54655038, 0xB687B2DA, 0x58695C34, 0xA899ACC4, 0x2617224A, 
		0xE4D5E088, 0x94A590F8, 0x6C5D6800, 0xFCCDF890, 0x6D5C6901, 0x55645139, 0x86B782EA, 0xA293A6CE, 
		0x5C6D5830, 0x4071442C, 0x78497C14, 0x6051640C, 0xCDFCC9A1, 0xDDECD9B1, 0x89B88DE5, 0xEADBEE86, 
		0x6E5F6A02, 0x25142149, 0x7647721A, 0x6756630B, 0x97A693FB, 0xBD8CB9D1, 0xAD9CA9C1, 0xB485B0D8, 
		0xA091A4CC, 0xE8D9EC84, 0x9BAA9FF7, 0x3001345C, 0xBC8DB8D0, 0x8CBD88E0, 0xE3D2E78F, 0x3A0B3E56, 
		0xC7F6C3AB, 0xD4E5D0B8, 0x68596C04, 0x35043159, 0x88B98CE4, 0x83B287EF, 0x75447119, 0x3607325A, 
		0xE0D1E48C, 0x1C2D1870, 0x2E1F2A42, 0xBF8EBBD3, 0xFACBFE96, 0xF3E0B63, 0x3F0E3B53, 0x3203365E, 
		0xF1C0F59D, 0x9FAE9BF3, 0x8DBC89E1, 0x3302375F, 0x3100355D, 0x2312274F, 0xBA8BBED6, 0x5B6A5F37, 
		0xA3B0E66, 0xA190A5CD, 0x2110254D, 0x7140751D, 0x7F4E7B13, 0x5766533B, 0xECDDE880, 0xDAEBDEB6, 
		0xA796A3CB, 0xC2F3C6AE, 0xFFCEFB93, 0xFECFFA92, 0xC0F1C4AC, 0x84B580E8, 0xD6E7D2BA, 0x4372472F, 
		0xA697A2CA, 0x9CAD98F0, 0x44754028, 0x1223167E, 0xD7E6D3BB, 0x9DAC99F1, 0x5340169, 0xB584B1D9, 
		0xD2E3D6BE, 0xC9F8CDA5, 0x736036B, 0xD8E9DCB4, 0x2C1D2840, 0x45744129, 0xEFDEEB83, 0x5E6F5A32, 
		0x7746731B, 0xC1F0C5AD, 0x2A1B2E46, 0x4170452D, 0x2D1C2941, 0x19281D75, 0xF5C4F199, 0xB988BDD5, 
		0x5F6E5B33, 0x87B683EB, 0x5263563E, 0x3E0F3A52, 0x9AAB9EF6, 0x28192C44, 0x8EBF8AE2, 0x2B1A2F47, 
		0xCCFDC8A0, 0x6657620A, 0xE3F0A62, 0x7B4A7F17, 0xF6C7F29A, 0xE2D3E68E, 0x49784D25, 0x1021147C, 
		0xAA9BAEC6, 0xEBDAEF87, 0xF0C1F49C, 0xCEFFCAA2, 0x48794C24, 0xFDCCF991, 0x6A5B6E06, 0xC4F5C0A8, 
		0x2F1E2B43, 0xEDDCE981, 0x98A99CF4, 0x332076F, 0xB889BCD4, 0x3706335B, 0xF7C6F39B, 0x130056D, 
		0x81B085ED, 0x2213264E, 0x2011244C, 0x69586D05, 0x1726137B, 0xB081B4DC, 0xDCEDD8B0, 0x6F5E6B03, 
		0x5061543C, 0x6150650D, 0x4F7E4B23, 0x99A89DF5, 0x29182D45, 0x85B481E9, 0x7A4B7E16, 0x3D0C3951, 
		0x1D2C1971, 0xD5E4D1B9, 0x4A7B4E26, 0xAF9EABC3, 0xA392A7CF, 0xF9C8FD95, 0xAC9DA8C0, 0xDFEEDBB3, 
		0x90A194FC, 0xD0E1D4BC, 0xB3A0F67, 0x7D4C7911, 0x9EAF9AF2, 0x1A2B1E76, 0xC5F4C1A9, 0x80B184EC, 
		0xF8C9FC94, 0xDBEADFB7, 0x8BBA8FE7, 0xC3D0860, 0xB382B7DF, 0x6352670F, 0xA998ADC5, 0x5160553D, 
		0x2716234B, 0x1B2A1F77, 0x34053058, 0x4E7F4A22, 0x8ABB8EE6, 0x4776432B, 0xE6D7E28A, 0x1627127A, 
		0xD1E0D5BD, 0x59685D35, 0x24152048, 0x5362573F, 0x65546109, 0x1120157D, 0x3C0D3850, 0x4D7C4921, 
	};


#define RORIGHT(a, amount) (((a)>>(amount)) | ((a)<<(32-(amount))))
#define ROLEFT(a, amount)  (((a)<<(amount)) | ((a)>>(32-(amount))))
#define XTime(s)           (((s)&0x80) ? ((s)<<1)^0x1B : ((s)<<1))
#define S0 ecx
#define S1 edx
#define S2 esi
#define S3 edi
#define MMX_16          mm4
#define MMX_keyschedule mm5
#define MMX_keysched144 mm6
#define MMX_bytes_left  mm7

#define AESCIPHER_ROUND(optyp, aa, bb, cc, dd) \
	__asm movzx ebx, al \
	__asm optyp aa,  dword ptr [esp+ebx*4] \
	__asm movzx ebx, ah \
	__asm optyp bb,  dword ptr [esp+ebx*4+1024] \
	__asm shr   eax, 16 \
	__asm movzx ebx, al \
	__asm optyp cc,  dword ptr [esp+ebx*4+2048] \
	__asm movzx ebx, ah \
	__asm optyp dd,  dword ptr [esp+ebx*4+3072]

#define AESCIPHER_LAST_ROUND(optyp, aa, bb, cc, dd, bufcomensate) \
	__asm movzx ebx, al \
	__asm mov   ebx, dword ptr [esp+ebx*4+bufcomensate] \
	__asm and   ebx, 0xff \
	__asm optyp aa,  ebx \
	__asm movzx ebx, ah \
	__asm mov   ebx, dword ptr [esp+ebx*4] \
	__asm and   ebx, 0xff00 \
	__asm optyp bb,  ebx \
	__asm shr   eax, 16 \
	__asm movzx ebx, al \
	__asm mov   ebx, dword ptr [esp+ebx*4] \
	__asm and   ebx, 0xff0000 \
	__asm optyp cc,  ebx \
	__asm movzx ebx, ah \
	__asm mov   ebx, dword ptr [esp+ebx*4+bufcomensate] \
	__asm and   ebx, 0xff000000 \
	__asm optyp dd,  ebx

#define MOV_XOR_16BYTES(srcmov, src, optyp) \
	__asm srcmov eax, src \
	__asm optyp  S0,  dword ptr [eax] \
	__asm optyp  S1,  dword ptr [eax+4] \
	__asm optyp  S2,  dword ptr [eax+8] \
	__asm optyp  S3,  dword ptr [eax+12]

#define BACKUP_S1_S2_S3 \
	__asm movd  mm1, S1 \
	__asm movd  mm2, S2 \
	__asm movd  mm3, S3



	void __stdcall AesCipher_MMXoptimized(const BYTE *input,
		BYTE *output,
		DWORD bytestoprocess)
	{
		unsigned long ulESP;
		BYTE *keyschedule = g_keyschedule;

		__asm
		{
			mov    ulESP, esp
				lea    esp,   S_boxes  //non-local variable

				mov    eax,             16
				movd   MMX_16,          eax
				mov    ebx,             bytestoprocess
				movd   MMX_bytes_left,  ebx

				mov    eax,             keyschedule
				add    eax,             144
				movd   MMX_keysched144, eax

DCBC_Outer_Loop:
			//restore keyschedule for the new block processing
			mov    eax,             keyschedule
				movd   MMX_keyschedule, eax

				////////////////////////////////////////////////
				// LOAD INPUT
				MOV_XOR_16BYTES(mov, input, mov)
				add    input, 16

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keyschedule, xor)
				paddd  MMX_keyschedule, MMX_16

				////////////////////////////////////////////////
				//TYPICAL ROUND 
DCBC_Loop:
			BACKUP_S1_S2_S3
				mov   eax, S0
				AESCIPHER_ROUND(mov, S0, S3, S2, S1)
				movd  eax, mm1
				AESCIPHER_ROUND(xor, S1, S0, S3, S2)
				movd  eax, mm2
				AESCIPHER_ROUND(xor, S2, S1, S0, S3)
				movd  eax, mm3
				AESCIPHER_ROUND(xor, S3, S2, S1, S0)

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keyschedule, xor)
				paddd  MMX_keyschedule, MMX_16

				movd  ebx, MMX_keysched144
				cmp   eax, ebx
				jb    DCBC_Loop

				////////////////////////////////////////////////
				//LAST ROUND 
				BACKUP_S1_S2_S3
				mov   eax, S0
				AESCIPHER_LAST_ROUND(mov, S0, S3, S2, S1, 2048)
				movd  eax, mm1
				AESCIPHER_LAST_ROUND(xor, S1, S0, S3, S2, 2048)
				movd  eax, mm2
				AESCIPHER_LAST_ROUND(xor, S2, S1, S0, S3, 2048)
				movd  eax, mm3
				AESCIPHER_LAST_ROUND(xor, S3, S2, S1, S0, 2048)

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keyschedule, xor)

				////////////////////////////////////////////////
				// SAVE OUTPUT
				psubd  MMX_bytes_left, MMX_16
				mov    ebx, output
				mov    dword ptr [ebx],    S0
				mov    dword ptr [ebx+4],  S1
				mov    dword ptr [ebx+8],  S2
				mov    dword ptr [ebx+12], S3
				add    ebx, 16
				mov    output, ebx

				movd   ecx,            MMX_bytes_left
				cmp    ecx, 16
				jge    DCBC_Outer_Loop

				//process the remaining few bytes
				//		rep movs  output, input //Doesn't work this way

				emms
				mov   esp, ulESP
		}

	}


	////////////////////////////////////////////////////////////////////
#undef  MMX_keyschedule
#undef  MMX_keysched144
#define MMX_keysched16  mm5
#define MMX_keysched160 mm6


	void __stdcall InvAesCipher_MMXoptimized(const BYTE *input,
		BYTE *output,
		DWORD bytestoprocess)
	{
		unsigned long ulESP;
		BYTE *inv_keyschedule = g_inv_keyschedule;

		__asm
		{
			mov    ulESP, esp

				mov    eax,             16
				movd   MMX_16,          eax
				mov    ebx,             bytestoprocess
				movd   MMX_bytes_left,  ebx

				mov    eax,             inv_keyschedule
				add    eax,             16
				movd   MMX_keysched16,  eax

InvDCBC_Outer_Loop:
			lea    esp,   Inv_boxes  //non-local variable
				//restore inv_keyschedule for the new block processing
				mov    eax,             inv_keyschedule
				add    eax,             160
				movd   MMX_keysched160, eax

				////////////////////////////////////////////////
				// LOAD INPUT
				MOV_XOR_16BYTES(mov, input, mov)
				add    input, 16

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keysched160, xor)
				psubd  MMX_keysched160, MMX_16

				////////////////////////////////////////////////
				//TYPICAL ROUND 
InvDCBC_Loop:
			BACKUP_S1_S2_S3
				mov   eax, S0
				AESCIPHER_ROUND(mov, S0, S1, S2, S3)
				movd  eax, mm1
				AESCIPHER_ROUND(xor, S1, S2, S3, S0)
				movd  eax, mm2
				AESCIPHER_ROUND(xor, S2, S3, S0, S1)
				movd  eax, mm3
				AESCIPHER_ROUND(xor, S3, S0, S1, S2)

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keysched160, xor)
				psubd  MMX_keysched160, MMX_16

				movd  ebx, MMX_keysched16
				cmp   eax, ebx
				jg    InvDCBC_Loop

				////////////////////////////////////////////////
				//LAST ROUND 
				lea   esp, Inv_S_box_dword  //non-local variable
				BACKUP_S1_S2_S3
				mov   eax, S0
				AESCIPHER_LAST_ROUND(mov, S0, S1, S2, S3, 0)
				movd  eax, mm1
				AESCIPHER_LAST_ROUND(xor, S1, S2, S3, S0, 0)
				movd  eax, mm2
				AESCIPHER_LAST_ROUND(xor, S2, S3, S0, S1, 0)
				movd  eax, mm3
				AESCIPHER_LAST_ROUND(xor, S3, S0, S1, S2, 0)

				//XOR key-schedule
				MOV_XOR_16BYTES(movd, MMX_keysched160, xor)

				////////////////////////////////////////////////
				// SAVE OUTPUT
				mov    ebx, output
				mov    dword ptr [ebx],    S0
				mov    dword ptr [ebx+4],  S1
				mov    dword ptr [ebx+8],  S2
				mov    dword ptr [ebx+12], S3
				add    ebx, 16
				mov    output, ebx

				psubd  MMX_bytes_left, MMX_16
				movd   ecx,            MMX_bytes_left
				cmp    ecx, 16
				jge    InvDCBC_Outer_Loop

				//process the remaining few bytes
				//		rep movs  output, input //Doesn't work this way

				emms
				mov   esp, ulESP
		}

	}

}; //namespace NAESMMX


void DataEncryption(BYTE *in_out, int bytestoprocess)
{
	if(bytestoprocess < 16)
		return;
	NAESMMX::AesCipher_MMXoptimized(in_out, in_out, bytestoprocess);
}

void DataDecryption(BYTE *in_out, int bytestoprocess)
{
	if(bytestoprocess < 16)
		return;
	NAESMMX::InvAesCipher_MMXoptimized(in_out, in_out, bytestoprocess);
}