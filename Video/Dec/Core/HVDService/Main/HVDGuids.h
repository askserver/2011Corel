#ifndef _HVD_GUIDS_H_
#define _HVD_GUIDS_H_

// ATI private GUIDs
// DRM encrypt 
DEFINE_GUID(DXVA_ATIDRM_Encrypt, 0xb9de9680, 0xfa07, 0x4976, 0x9d, 0xed, 0x19, 0xe1, 0xdb, 0x6d, 0x96, 0x6b);
// DXVA for MPEG2 SD only
DEFINE_GUID(ATI_DECODE_MPEG2_SD_ONLY_GUID, 0xbb0796ae, 0x2ed4, 0x468d, 0xa1, 0x82, 0x38, 0xf2, 0xce, 0xad, 0xec, 0xf8); 
// DXVA for HD file only.
DEFINE_GUID(AMD_DECODE_MPEG2_HD_FILE_GUID, 0x47e64130, 0xdc07, 0x4075, 0x97, 0x2b, 0x57, 0x25, 0x4c, 0x8c, 0x3e, 0x49);
// Protected Blt
DEFINE_GUID(DXVA_ATIDRM_Profile, 0x5b23d46d, 0xfa5f, 0x4fdc, 0xb7, 0x8a, 0x7e, 0xb2, 0x78, 0x79, 0x42, 0xec); 
// Host-based iTrans
DEFINE_GUID(DXVA_ModeH264_ATI_A, 0x5cd11ee4, 0xdac9, 0x4449, 0xa0, 0x17, 0x44, 0xb, 0x36, 0xc0, 0xde, 0x3d);
// Off-host iTrans
DEFINE_GUID(DXVA_ModeH264_ATI_B, 0xe5de3a2, 0xc4d2, 0x4c2b, 0x85, 0xf0, 0x8c, 0x30, 0x90, 0xfd, 0xae, 0x4b);
// BA decoding
DEFINE_GUID(DXVA_ATI_BA_H264, 0x4f3c94d, 0x2485, 0x45b3, 0x9e, 0x28, 0x4d, 0xd7, 0x4d, 0xfb, 0x6e, 0xc4);
// BA decoding (Microsoft API)
DEFINE_GUID(DXVADDI_ModeH264_E, 0x1b81be68, 0xa0c7, 0x11d3,0xb9,0x84,0x00,0xc0,0x4f,0x2e,0x73,0xc5);
// BA decoding (Microsoft API), FGT supported
DEFINE_GUID(DXVADDI_ModeH264_F, 0x1b81be69, 0xa0c7, 0x11d3,0xb9,0x84,0x00,0xc0,0x4f,0x2e,0x73,0xc5);
// ATI M72 1080, SW decode
DEFINE_GUID(DXVA_ModeH264_ATI_RESTRICTED, 0x184c6d4, 0xf80c, 0x4299, 0xad, 0xa9, 0x6a, 0x60, 0x87, 0xfb, 0x9d, 0x0);
// AMD MPEG4 VLD mode
DEFINE_GUID(AMD_MPEG4_PART2_ASP, 0x7c74adc6, 0xe2ba, 0x4ade, 0x86, 0xde, 0x30, 0xbe, 0xab, 0xb4, 0x0c, 0xc1);


// Intel private GUIDs
// VC1 VLD
// {BCC5DB6D-A2B6-4AF0-ACE4-ADB1F787BC89}
DEFINE_GUID(DXVA2_Intel_ModeVC1_D,	0xbcc5db6d, 0xa2b6,0x4af0,0xac,0xe4,0xad,0xb1,0xf7,0x87,0xbc,0x89);
// for Intel 2nd Context - 60FPS rendering {F219256B-9752-42eb-8592-609F8CBC2DF2}
DEFINE_GUID(DXVADDI_Intel_ModeVC1_D_2ndCtxt, 0xf219256b, 0x9752, 0x42eb, 0x85, 0x92, 0x60, 0x9f, 0x8c, 0xbc, 0x2d, 0xf2);
// H264
// {604F8E64-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_A, 0x604f8e64, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {604F8E65-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_B, 0x604f8e65, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {604F8E66-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_C, 0x604f8e66, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {604F8E67-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_D, 0x604f8e67, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {604F8E68-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_E, 0x604f8e68, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {604F8E69-4951-4c54-88FE-ABD25C15B3D6}
DEFINE_GUID(DXVADDI_Intel_ModeH264_F, 0x604f8e69, 0x4951, 0x4c54, 0x88, 0xfe, 0xab, 0xd2, 0x5c, 0x15, 0xb3, 0xd6);
// {7460004-7533-4E1A-B8E3-FF206BF5CE47} PAVP Service
DEFINE_GUID(DXVA2_Intel_Pavp, 0x7460004, 0x7533, 0x4e1a, 0xbd, 0xe3, 0xff, 0x20, 0x6b, 0xf5, 0xce, 0x47);
// {80A63F98-3E50-46e1-8178-778613BD911B} 2nd Context
DEFINE_GUID(DXVADDI_Intel_ModeH264_E_2ndCtxt, 0x80a63f98, 0x3e50, 0x46e1, 0x81, 0x78, 0x77, 0x86, 0x13, 0xbd, 0x91, 0x1b);
// {7956A168-1E94-4c7f-BBE8-C6B2DE6A5C4E} 2nd Context
DEFINE_GUID(DXVADDI_Intel_ModeH264_F_2ndCtxt, 0x7956a168, 0x1e94, 0x4c7f, 0xbb, 0xe8, 0xc6, 0xb2, 0xde, 0x6a, 0x5c, 0x4e);

// for Intel VLD
#define DXVA_RESTRICTED_INTEL_MODE_VC1_D		 0x6D
// for Intel 2nd Context - 60FPS rendering 
#define DXVA_RESTRICTED_INTEL_MODE_VC1_D_2ndCtxt	 0x6B

// nVIDIA private GUIDs
DEFINE_GUID(DXVA_ModeH264_VP1,0x70174349, 0xd888,0x408a,0xbb,0x1d,0x9e,0x18,0x07,0x5e,0x5a,0x5a);
// for MPEG2 VLD mode
DEFINE_GUID(DXVA_ModeMPEG2_VLD,    0xee27417f, 0x5e28, 0x4e65,0xbe,0xea,0x1d,0x26,0xb5,0x08,0xad,0xc9);
// nVidia MPEG4 VLD mode
DEFINE_GUID(DXVA_ModeMPEG4_VLD,	0x9947ec6f, 0x689b, 0x11dc, 0xa3, 0x20, 0x00, 0x19, 0xdb, 0xbc, 0x41, 0x84);

// Others
// DXVA1 encrypt
DEFINE_GUID(DXVA_EncryptProt1, 0x1b81beD1, 0xa0c7,0x11d3,0xb9,0x84,0x00,0xc0,0x4f,0x2e,0x73,0xc5);

//Media Type GUIDs(original defined in $(depot)\shared\include\guid_ext.h)
// VC1 stream

// VC1 elementary stream, also known as MEDIASUBTYPE_WVC1_ES
DEFINE_GUID(MEDIASUBTYPE_VC1, 0x1700a18b, 0xe31c, 0x493f, 0x9b, 0xa7, 0xef, 0xe2, 0x88, 0xe7, 0x69, 0xa9);

DEFINE_GUID(MEDIASUBTYPE_WVC1_ES, 0x1700a18b, 0xe31c, 0x493f, 0x9b, 0xa7, 0xef, 0xe2, 0x88, 0xe7, 0x69, 0xa9);

// WVC1 stream
DEFINE_GUID(MEDIASUBTYPE_WVC1, 0x31435657, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71);

// H264 elementary stream

// Main profile {8D2D71CB-243F-45E3-B2D8-5FD7967EC09B} 
DEFINE_GUID(MEDIASUBTYPE_MLH264, 0x8d2d71cb, 0x243f, 0x45e3, 0xb2, 0xd8, 0x5f, 0xd7, 0x96, 0x7e, 0xc0, 0x9b);

// High profile {8D2D71CC-243F-45E3-B2D8-5FD7967EC09B}
DEFINE_GUID(MEDIASUBTYPE_HLH264, 0x8d2d71cc, 0x243f, 0x45e3, 0xb2, 0xd8, 0x5f, 0xd7, 0x96, 0x7e, 0xc0, 0x9b);

// baseline profile {8D2D71CD-243F-45E3-B2D8-5FD7967EC09B}
DEFINE_GUID(MEDIASUBTYPE_BLH264, 0x8d2d71cd, 0x243f, 0x45e3, 0xb2, 0xd8, 0x5f, 0xd7, 0x96, 0x7e, 0xc0, 0x9b);

// extend profile {8D2D71CE-243F-45E3-B2D8-5FD7967EC09B}
DEFINE_GUID(MEDIASUBTYPE_ELH264, 0x8d2d71ce, 0x243f, 0x45e3, 0xb2, 0xd8, 0x5f, 0xd7, 0x96, 0x7e, 0xc0, 0x9b);

// DIVX/MPEG4 stream
DEFINE_GUID(MEDIASUBTYPE_DIVX, 'XVID', 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);


DEFINE_GUID(MEDIASUBTYPE_IGOR, 0x524f4749, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_MCS3, 0x3353434d, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_SISI, 0x49534953, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_MC12, 0x3231434d, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_MCAM, 0x4d41434d, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_M2AM, 0x4d41324d, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_NMGA, 0x41474d4e, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_SMM1, 0x314d4d53, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_SIMC, 0x434d4953, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_TDMC, 0x434d4454, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_NVDS, 0x5344564e, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

DEFINE_GUID(MEDIASUBTYPE_NVMC, 0x434d564e, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);

// HVA Mocomp2

DEFINE_GUID(MEDIASUBTYPE_I81X, 0x965123e1, 0x6552, 0x11d3, 0x94, 0x3b, 0x00, 0xa0, 0xc9, 0x39, 0xb4, 0x16);

DEFINE_GUID(MEDIASUBTYPE_SISMC, 0xc062efe0, 0x8ff3, 0x11d2, 0x9d, 0x9d, 0x00, 0x80, 0xc8, 0x6a, 0xa7, 0xb1);

DEFINE_GUID(MEDIASUBTYPE_SISADV, 0xc1bfe6c0, 0xc196, 0x11d2, 0xb3, 0x74, 0x00, 0x80, 0xc8, 0x6a, 0xa7, 0xb1);

DEFINE_GUID(MEDIASUBTYPE_NV10MC0, 0x6e918980, 0x0166, 0x11d3, 0x8e, 0xfa, 0x00, 0x10, 0x4b, 0x70, 0xaa, 0xcc);

// VMR

DEFINE_GUID(MEDIASUBTYPE_ARGB4444, 0x6e6415e6, 0x5c24, 0x425f, 0x93, 0xcd, 0x80, 0x10, 0x2b, 0x3d, 0x1c, 0xca);

DEFINE_GUID(DXVA_Inverse32PullDown, 0x212dc724, 0x3235, 0x44a4, 0xbd, 0x29, 0xe1, 0x65, 0x2b, 0xbc, 0xc7, 0x1c);

// MVC 

DEFINE_GUID(DXVA_ModeH264_MVC,   0x32fcfe3f, 0xde46,0x4a49,0x86,0x1b,0xac,0x71,0x11,0x6,0x49,0xd5);

#endif
