dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/josua.h)



dnl *********************************************************************
dnl Source packaging numbers
JOSUA_MAJOR_VERSION=0
JOSUA_MINOR_VERSION=9
JOSUA_MICRO_VERSION=2

dnl program extension
JOSUA_VERSION=$JOSUA_MAJOR_VERSION.$JOSUA_MINOR_VERSION.$JOSUA_MICRO_VERSION

AC_SUBST(JOSUA_VERSION)

VERSION=$JOSUA_VERSION
PACKAGE=josua

dnl *********************************************************************
dnl Initialize automake stuff
AC_CONFIG_AUX_DIR(scripts)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AC_CANONICAL_HOST

AC_SUBST(ac_aux_dir)

dnl Checks for programs.

AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

dnl libtool support
LT_AC_PROG_SED
AC_PROG_LIBTOOL

dnl declare --enable-* args and collect ac_help strings

AC_ARG_ENABLE(debug,
[  --disable-debug         turn off debugging.],
disable_debug=$enableval,disable_debug="yes")

AC_ARG_ENABLE(trace,
[  --disable-trace         turn off trace.],
disable_trace=$enableval,disable_trace="yes")

AC_ARG_ENABLE(mleak,
[  --enable-mleak          turn on memory leak detection.],
enable_mleak=$enableval,enable_mleak="no")

AC_ARG_ENABLE(mpatrol,
[  --enable-mpatrol        turn on memory leak detection with patrol.],
enable_mpatrol=$enableval,enable_mpatrol="no")

dnl build with multithreaded support (need semaphore).
AC_ARG_ENABLE(mt,
[  --disable-mt            compile oSIP without multi-thread support.],
enable_mt=$enableval,enable_mt="yes")

dnl support for linux-thread or posix thread (pthread.h)
AC_ARG_ENABLE(pthread,
[  --enable-pthread        enable support for POSIX threads. (autodetect)],
enable_pthread=$enableval,enable_pthread="no")

dnl support for GNU Portable Threads
AC_ARG_ENABLE(pth,
[  --enable-pth            enable support for GNU portable thread.],
enable_pth=$enableval,enable_pth="no")

dnl support for semaphore.h (linux/sun...)
AC_ARG_ENABLE(semaphore,
[  --enable-semaphore      enable support for semaphore (semaphore.h)],
enable_semaphore=$enableval,enable_semaphore="no")

dnl support for sysV semaphore in sys/sem.h (BSD/linux...)
AC_ARG_ENABLE(sysv,
[  --enable-sysv           enable support for sysV semaphore (sys/sem.h).],
enable_sysv=$enableval,enable_sysv="no")

dnl compile with mt support
if test "x$enable_mt" = "xyes"; then
  if test "x$enable_pth" = "xyes"; then
    JOSUA_FLAGS="-DHAVE_PTH_PTHREAD_H `pthread-config --cflags`"
    JOSUA_LIB="`pthread-config --ldflags` `pthread-config --libs`"
  elif test "x$enable_pthread" = "xyes"; then
    JOSUA_FLAGS="-DHAVE_PTHREAD_H"
    JOSUA_LIB="-lpthread"
  else
    ACX_PTHREAD()
dnl    JOSUA_LIB="-lpthread"
  fi
  JOSUA_FLAGS="$JOSUA_FLAGS -DOSIP_MT"
fi

if test "x$enable_semaphore" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DHAVE_SEMAPHORE_H"
  AC_CHECK_HEADERS(semaphore.h)
elif test "x$enable_sysv" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -UHAVE_SEMAPHORE_H -DHAVE_SYS_SEM_H"
  AC_CHECK_HEADERS(sys/sem.h)
else
  AC_CHECK_HEADERS(semaphore.h)
  AC_CHECK_HEADERS(sys/sem.h)
fi

if test "$host_os" = "hpux11.00" -o "$host_os" = "hpux11.11" ;then
        echo "We are on HPUX"
else
        echo "We are not on HPUX"
	JOSUA_FLAGS="$JOSUA_FLAGS -pedantic"
fi

if test "x$disable_debug" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DENABLE_DEBUG -g"
fi

if test "x$disable_trace" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DENABLE_TRACE"
fi

if test "x$enable_mleak" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DENABLE_LEAKD"
fi

if test "x$enable_mpatrol" = "xyes"; then
  JOSUA_FLAGS="$JOSUA_FLAGS -DENABLE_MPATROL"
  JOSUA_LIB="$JOSUA_LIB -lmpatrolmt -lelf"
fi

dnl Checks for libraries.
AC_CHECK_LIB(posix4,sem_open,[JOSUA_LIB="$JOSUA_LIB -lposix4 -mt"])
AC_CHECK_LIB(nsl,nis_add,[JOSUA_LIB="$JOSUA_LIB -lnsl"])
AC_CHECK_LIB(socket,sendto,[JOSUA_LIB="$JOSUA_LIB -lsocket"])

JOSUA_FLAGS="$JOSUA_FLAGS -DUSE_TMP_BUFFER"

AC_caolan_FUNC_WHICH_GETHOSTBYNAME_R()

AC_SUBST(JOSUA_FLAGS)
AC_SUBST(JOSUA_LIB)

AC_SUBST(CFLAGS)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(strings.h)
AC_CHECK_HEADERS(stdio.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(varargs.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(assert.h)
AC_CHECK_HEADERS(signal.h)
AC_CHECK_HEADERS(sys/signal.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(fcntl.h)

if test "x$enable_mt" = "xyes"; then
  if test "x$enable_pth" = "xyes"; then
    echo
  elif test "x$enable_pthread" = "xyes"; then
    echo
  else
    echo
dnl    AC_CHECK_HEADERS(pthread.h)
dnl    AC_CHECK_HEADERS(pth/pthread.h)
  fi
fi

AC_OUTPUT(Makefile src/Makefile conf/Makefile windows/Makefile scripts/Makefile)

